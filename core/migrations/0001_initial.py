# Generated by Django 5.1.6 on 2025-02-28 22:05

import core.models.definitions.DateTimeWithoutTZ
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArtistStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'artist_status',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('keywords', models.JSONField()),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(null=True)),
                ('deleted_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(blank=True, null=True)),
                ('title', models.CharField(db_index=True, max_length=255)),
                ('start_date', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(db_index=True)),
                ('end_date', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(db_index=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('buy_ticket_url', models.URLField(blank=True, null=True)),
                ('photos_url', models.URLField(blank=True, null=True)),
                ('thumbnail_url', models.URLField(blank=True, null=True)),
                ('web_url', models.URLField(blank=True, null=True)),
                ('is_free', models.BooleanField()),
                ('price', models.FloatField()),
                ('is_active', models.BooleanField()),
            ],
            options={
                'db_table': 'event',
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(null=True)),
                ('deleted_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(blank=True, null=True)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('about', models.TextField()),
                ('address', models.TextField()),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_active', models.BooleanField()),
                ('is_approved', models.BooleanField()),
                ('fax', models.CharField(blank=True, max_length=50, null=True)),
                ('cover_photo_url', models.URLField()),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('instagram_url', models.URLField(blank=True, null=True)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('tiktok_url', models.URLField(blank=True, null=True)),
                ('web_url', models.URLField(blank=True, null=True)),
                ('x_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'db_table': 'gallery',
            },
        ),
        migrations.CreateModel(
            name='GeneralNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
            ],
            options={
                'db_table': 'general_notification',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('latitude', models.FloatField(db_index=True)),
                ('longitude', models.FloatField(db_index=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('province', models.CharField(blank=True, max_length=255, null=True)),
                ('district', models.CharField(blank=True, max_length=255, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('timezone', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'location',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('type', models.CharField(db_index=True, max_length=255)),
                ('describe', models.TextField()),
            ],
            options={
                'db_table': 'permission',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('type', models.CharField(max_length=255)),
                ('describe', models.TextField()),
            ],
            options={
                'db_table': 'role',
            },
        ),
        migrations.CreateModel(
            name='UserStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_status',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(db_index=True, max_length=255, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('surname', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('about', models.TextField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('profile_picture_url', models.URLField(blank=True, null=True)),
                ('instagram_url', models.URLField(blank=True, null=True)),
                ('web_url', models.URLField(blank=True, null=True)),
                ('x_url', models.URLField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True, null=True)),
                ('deleted_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('surname', models.CharField(db_index=True, max_length=255)),
                ('about', models.TextField()),
                ('is_registered', models.BooleanField()),
                ('registered_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(blank=True, null=True)),
                ('x_url', models.URLField(blank=True, null=True)),
                ('instagram_url', models.URLField(blank=True, null=True)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('profile_picture_url', models.URLField(blank=True, null=True)),
                ('web_url', models.URLField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'artist',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='artist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='core.artist'),
        ),
        migrations.CreateModel(
            name='Audit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('action', models.CharField(db_index=True, max_length=255)),
                ('table_name', models.CharField(max_length=255)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'audit',
            },
        ),
        migrations.CreateModel(
            name='Blacklist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('reason', models.TextField()),
                ('ban_type', models.CharField(choices=[('TEMP', 'Temporary'), ('PER', 'Permanent')], max_length=10)),
                ('banned_until', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(blank=True, null=True)),
                ('banned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banned_users', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'blacklist',
            },
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('bookmarked_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='app_bookmark', to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.event')),
            ],
            options={
                'db_table': 'bookmark',
            },
        ),
        migrations.CreateModel(
            name='EventArtist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.artist')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.event')),
            ],
            options={
                'db_table': 'event_artist',
            },
        ),
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.category')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.event')),
            ],
            options={
                'db_table': 'event_category',
            },
        ),
        migrations.CreateModel(
            name='FollowingArtist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('followed_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField()),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.artist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'following_artist',
            },
        ),
        migrations.CreateModel(
            name='FollowingGallery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('followed_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('gallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.gallery')),
            ],
            options={
                'db_table': 'following_gallery',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='gallery',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.gallery'),
        ),
        migrations.CreateModel(
            name='GalleryArtist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.artist')),
                ('gallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.gallery')),
            ],
            options={
                'db_table': 'gallery_artist',
            },
        ),
        migrations.AddField(
            model_name='gallery',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.location'),
        ),
        migrations.AddField(
            model_name='event',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.location'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField()),
                ('read_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='GalleryUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('gallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.gallery')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.role')),
            ],
            options={
                'db_table': 'gallery_user',
            },
        ),
        migrations.CreateModel(
            name='UserLocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('detected_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField()),
                ('is_active', models.BooleanField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_location',
            },
        ),
        migrations.CreateModel(
            name='ArtistVerification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('requested_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField()),
                ('approved_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approved_verifications', to=settings.AUTH_USER_MODEL)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.artist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.userstatus')),
            ],
            options={
                'db_table': 'artist_verification',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.userstatus'),
        ),
        migrations.CreateModel(
            name='UserStatusHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('reason', models.TextField()),
                ('changed_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField()),
                ('changed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changed_statuses', to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.userstatus')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_status_history',
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.permission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.role')),
            ],
            options={
                'db_table': 'role_permission',
                'unique_together': {('role', 'permission')},
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField(auto_now=True)),
                ('assigned_at', core.models.definitions.DateTimeWithoutTZ.DateTimeWithoutTZField()),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_roles', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_role',
                'unique_together': {('user', 'role')},
            },
        ),
    ]
